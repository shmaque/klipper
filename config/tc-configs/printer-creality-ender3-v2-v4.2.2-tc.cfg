# This file contains pin mappings for the stock 2020 Creality Ender 3
# V2. To use this config, during "make menuconfig" select the
# STM32F103 with a "28KiB bootloader" and serial (on USART1 PA10/PA9)
# communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

# Mainsail
[include mainsail.cfg]
# Fluidd
#[include fluidd.cfg]

[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: 0
position_max: 235
#position_min: -15
homing_speed: 50

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: 0
position_max: 235
#position_min: -13
homing_speed: 50

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
#endstop_pin: ^PA7 #Original end-stop
#position_endstop: 0.0
endstop_pin: probe:z_virtual_endstop # Use BLTouch for z endstop
position_max: 250
# Need to set position_min to a negative value while calibrating BLTOUCH offset
position_min: -4
homing_speed: 4
second_homing_speed: 1
homing_retract_dist: 2.0

[extruder]
max_extrude_only_distance: 100.0
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 34.406
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
control: pid
# tuned for stock hardware with 200 degree Celsius target
pid_Kp: 24.276
pid_Ki: 1.349
pid_Kd: 109.243
min_temp: 0
max_temp: 250

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
control: pid
# tuned for stock hardware with 60 degree Celsius target
pid_Kp: 68.855
pid_Ki: 1.370
pid_Kd: 864.996
min_temp: 0
max_temp: 130

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100
square_corner_velocity: 5


# Extra customizations & overrides
############################################################################
# M118 & pause functionality
[respond]
#default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
default_prefix: 
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".

[pause_resume] 
recover_velocity: 50

# Temp Sensors
# Raspberry Pi Host
[temperature_sensor Raspberry_Pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100
# Mainboard MCU (STM32)
[temperature_sensor Mainboard_MCU]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

# Auto-leveling sensor
[bltouch]
sensor_pin: ^PB1
control_pin: PB0
# Offset calculations:
# Probe @ mark:  toolhead: X:117.500000 Y:117.500000 Z:-0.000000 E:0.000000
# Nozzle @ mark: toolhead: X:72.500000 Y:111.500000 Z:-0.000000 E:0.000000
# Delta: x: -45, y: -6
x_offset: -45
y_offset: -6
z_offset: 1.710 # auto-calibrated value
speed:35
samples:2
# Consider median if using more than 2 samples
#samples_result: median
samples_result: average
samples_tolerance: 0.0075
samples_tolerance_retries: 10
probe_with_touch_mode: true
stow_on_each_sample: false

[safe_z_home] 
home_xy_position: 117.5,117.5 #center of print bed (stated is 220x220 but actual is 235x235)
speed: 75
z_hop: 10                     # Move up 10mm
z_hop_speed: 5
move_to_previous: True

# Bed Meshing
[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 15,15
# Need to back probe opffset out of the max coordinates
#mesh_max: 205,205
mesh_max: 160,199
probe_count: 4,3
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0
#speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
#horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
#mesh_min:
#   Defines the minimum X, Y coordinate of the mesh for rectangular
#   beds. This coordinate is relative to the probe's location. This
#   will be the first point probed, nearest to the origin. This
#   parameter must be provided for rectangular beds.
#mesh_max:
#   Defines the maximum X, Y coordinate of the mesh for rectangular
#   beds. Adheres to the same principle as mesh_min, however this will
#   be the furthest point probed from the bed's origin. This parameter
#   must be provided for rectangular beds.
#probe_count: 3, 3
#   For rectangular beds, this is a comma separate pair of integer
#   values X, Y defining the number of points to probe along each
#   axis. A single value is also valid, in which case that value will
#   be applied to both axes. Default is 3, 3.
#fade_start: 1.0
#   The gcode z position in which to start phasing out z-adjustment
#   when fade is enabled. Default is 1.0.
#fade_end: 0.0
#   The gcode z position in which phasing out completes. When set to a
#   value below fade_start, fade is disabled. It should be noted that
#   fade may add unwanted scaling along the z-axis of a print. If a
#   user wishes to enable fade, a value of 10.0 is recommended.
#   Default is 0.0, which disables fade.
#fade_target:
#   The z position in which fade should converge. When this value is
#   set to a non-zero value it must be within the range of z-values in
#   the mesh. Users that wish to converge to the z homing position
#   should set this to 0. Default is the average z value of the mesh.
#split_delta_z: .025
#   The amount of Z difference (in mm) along a move that will trigger
#   a split. Default is .025.
#move_check_distance: 5.0
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
#mesh_pps: 2, 2
#   A comma separated pair of integers X, Y defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed point.
#   The user may enter a single value which will be applied to both
#   axes. Default is 2, 2.
#algorithm: lagrange
#   The interpolation algorithm to use. May be either "lagrange" or
#   "bicubic". This option will not affect 3x3 grids, which are forced
#   to use lagrange sampling. Default is lagrange.
#bicubic_tension: .2
#   When using the bicubic algorithm the tension parameter above may
#   be applied to change the amount of slope interpolated. Larger
#   numbers will increase the amount of slope, which results in more
#   curvature in the mesh. Default is .2.
#zero_reference_position:
#   An optional X,Y coordinate that specifies the location on the bed
#   where Z = 0.  When this option is specified the mesh will be offset
#   so that zero Z adjustment occurs at this location.  The default is
#   no zero reference.
#faulty_region_1_min:
#faulty_region_1_max:
#   Optional points that define a faulty region.  See docs/Bed_Mesh.md
#   for details on faulty regions.  Up to 99 faulty regions may be added.
#   By default no faulty regions are set.
#adaptive_margin:
#   An optional margin (in mm) to be added around the bed area used by
#   the defined print objects when generating an adaptive mesh.

[bed_screws]
screw1: 25, 205 # Using rear left to take measurements as harder to reach
screw1_name: rear left screw
screw2: 195, 205
screw2_name: rear right screw
screw3: 195, 35
screw3_name: front right screw
screw4: 25, 35
screw4_name: front left screw

# Support for commanding screw adjustment walk-through
[screws_tilt_adjust]
screw1: 57, 229
screw1_name: rear left screw
screw2: 227, 229
screw2_name: rear right screw
screw3: 227, 70
screw3_name: front right screw
screw4: 57, 70
screw4_name: front left screw
horizontal_move_z: 10
speed: 50
screw_thread: CW-M4 # Use CW for Clockwise and CCW for Counter Clockwise 

# Filament runout sensor (BTT SFS)
[filament_motion_sensor BTT-SFS]
detection_length: 7.0
##   The minimum length of filament pulled through the sensor to trigger
##   a state change on the switch_pin
##   Default is 7 mm.
extruder: extruder
# Does this need to be !PA4?
switch_pin: PA4
pause_on_runout: False
##   When set to True, a PAUSE will execute immediately after a runout
##   is detected. Note that if pause_on_runout is False and the
##   runout_gcode is omitted then runout detection is disabled. Default
##   is True.
runout_gcode:
    RESPOND MSG="Filament sensor runout detected"
    PAUSE # [pause_resume] is required
##   A list of G-Code commands to execute after a filament runout is
##   detected. See docs/Command_Templates.md for G-Code format. If
##   pause_on_runout is set to True this G-Code will run after the
##   PAUSE is complete. The default is not to run any G-Code commands.
insert_gcode:
    RESPOND MSG="Filament sensor insertion detected"
##   A list of G-Code commands to execute after a filament insert is
##   detected. See docs/Command_Templates.md for G-Code format. The
##   default is not to run any G-Code commands, which disables insert
##   detection.
#event_delay: 3.0
##   The minimum amount of time in seconds to delay between events.
##   Events triggered during this time period will be silently
##   ignored. The default is 3 seconds.
#pause_delay: 0.5
##   The amount of time to delay, in seconds, between the pause command
##   dispatch and execution of the runout_gcode. It may be useful to
##   increase this delay if OctoPrint exhibits strange pause behavior.
##   Default is 0.5 seconds.

# [input_shaper]
# shaper_freq_x: 45.5
# shaper_freq_y: 46.8
# shaper_type: ei

# Load custom macros
[include user-macros.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.213750, -0.217500, -0.177500, -0.122500
#*# 	  -0.315000, -0.302500, -0.240000, -0.183750
#*# 	  -0.015000, -0.105000, -0.137500, -0.155000
#*# x_count = 4
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 159.99
#*# min_y = 15.0
#*# max_y = 199.0
