# This file contains pin mappings for the  2020 Creality Ender 3
# V2 with a BTT SKR Mini E3 V3. 
# To use this config, during "make menuconfig" select the
# STM32G0B1 with a "8KiB bootloader" and USB (on PA11/PA12)
# communication.

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must be called "firmware.bin".

# See docs/Config_Reference.md for a description of parameters.

# Mainsail
[include mainsail.cfg]

# ADXL345
#[include adxl.cfg]

### BTT FW Link for reference: https://github.com/bigtreetech/BIGTREETECH-SKR-mini-E3/tree/master/firmware/V3.0
#### 3.0:   https://github.com/bigtreetech/BIGTREETECH-SKR-mini-E3/blob/master/hardware/BTT%20SKR%20MINI%20E3%20V3.0/Hardware/BTT%20E3%20SKR%20MINI%20V3.0_SCH.pdf

# Import board pin aliases
[include pins-btt-skr-mini-e3-v3.0.cfg]

[stepper_x]
step_pin: STEPPER_X_STEP
dir_pin: !STEPPER_X_DIR
enable_pin: !STEPPER_X_EN
microsteps: 16
rotation_distance: 40
endstop_pin: ^STOP_X_SENSE
position_endstop: 0
position_max: 235
#position_min: -15
homing_speed: 50

[tmc2209 stepper_x]
uart_pin: STEPPER_UART_RX
tx_pin: STEPPER_UART_TX
uart_address: 0
run_current: 0.580
stealthchop_threshold: 999999

[stepper_y]
step_pin: STEPPER_Y_STEP
dir_pin: !STEPPER_Y_DIR
enable_pin: !STEPPER_Y_EN
microsteps: 16
rotation_distance: 40
endstop_pin: ^STOP_Y_SENSE
position_endstop: 0
position_max: 235
#position_min: -13
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: STEPPER_UART_RX
tx_pin: STEPPER_UART_TX
uart_address: 2
run_current: 0.580
stealthchop_threshold: 999999

[stepper_z]
step_pin: STEPPER_Z_STEP
dir_pin: STEPPER_Z_DIR # Note: not inverted?
enable_pin: !STEPPER_Z_EN
microsteps: 16
rotation_distance: 8
#endstop_pin: ^STOP_Z_SENSE # Original end-stop
#position_endstop: 0.0
endstop_pin: probe:z_virtual_endstop # Use BLTouch for z endstop
position_max: 250
# Need to set position_min to a negative value while calibrating BLTOUCH offset
position_min: -4
homing_speed: 4
second_homing_speed: 1
homing_retract_dist: 2.0

[tmc2209 stepper_z]
uart_pin: STEPPER_UART_RX
tx_pin: STEPPER_UART_TX
uart_address: 1
run_current: 0.580
stealthchop_threshold: 999999


[extruder]
max_extrude_only_distance: 100.0
step_pin: STEPPER_E_STEP
dir_pin: !STEPPER_E_DIR
enable_pin: !STEPPER_E_EN
microsteps: 16
rotation_distance: 34.406
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: HEATER_E0_CTL
sensor_type: EPCOS 100K B57560G104F
sensor_pin: TEMP_TH0_SENSE
min_temp: 0
max_temp: 250
# PID Controller
control: pid
#  - tuned for stock hardware with:
#    200 degree Celsius target
#pid_Kp: 24.276
#pid_Ki: 1.349
#pid_Kd: 109.243
#    210 deg C target
pid_Kp: 24.146
pid_Ki: 1.341
pid_Kd: 108.656
# Pressure Advance
#  - Ran square_tower test w/ layer height: 0.3, start layer: 0, layer count: 167, advance factor: 0.020
#  - Measured sweet spot at ~28.46mm
#  - Calculate: pressure_advance = <start> + <measured_height> * <factor>
#               pressure_advance = 0 + (28.46 * 0.020) = 0.5692
# Alternative: https://realdeuce.github.io/Voron/PA/pressure_advance.html
#pressure_advance: 0.5692
pressure_advance: 0.53

[tmc2209 extruder]
uart_pin: STEPPER_UART_RX
tx_pin: STEPPER_UART_TX
uart_address: 3
run_current: 0.650
stealthchop_threshold: 999999

[heater_bed]
heater_pin: HEATER_HB_CTL
sensor_type: EPCOS 100K B57560G104F
#sensor_type: ATC Semitec 104GT-2 # TODO: this was in the SKR Mini generic config - is this sensor germane to the bed or the board?
sensor_pin: TEMP_THB_SENSE
control: pid
# tuned for stock hardware with 60 degree Celsius target
pid_Kp: 68.855
pid_Ki: 1.370
pid_Kd: 864.996
min_temp: 0
max_temp: 130

[controller_fan mcu_fan]
pin: FAN1_CTL

[heater_fan hotend_cooling_fan]
pin: FAN2_CTL
heater: extruder
heater_temp: 45.0 #TODO: value?

#Part cooling fan
[fan]
pin: FAN0_CTL

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_2B004B001450415833323520-if00
#serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00 # From BTT cfg
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
#max_accel: 3000
max_accel: 4400 # shaper recommends < 24000 (x) for mzv and 4400 (y) for mzv
max_z_velocity: 5
max_z_accel: 100
square_corner_velocity: 5

[input_shaper]
shaper_freq_x: 90.2
shaper_type_x: mzv
shaper_freq_y: 38.8
shaper_type_y: mzv


# Extra customizations & overrides
############################################################################
# M118 & pause functionality
[respond]
#default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
default_prefix: 
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".

[pause_resume] 
recover_velocity: 50

# Temp Sensors
# Raspberry Pi Host
[temperature_sensor Raspberry_Pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100
# Mainboard MCU (STM32)
[temperature_sensor Mainboard_MCU]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

# Auto-leveling sensor
[bltouch]
sensor_pin: ^Z_PROBE_P1 #NOTE: needs pullup
control_pin: Z_PROBE_P3
# Offset calculations:
# Probe @ mark:  toolhead: X:117.500000 Y:117.500000 Z:-0.000000 E:0.000000
# Nozzle @ mark: toolhead: X:72.500000 Y:111.500000 Z:-0.000000 E:0.000000
# Delta: x: -45, y: -6
x_offset: -45
y_offset: -6
z_offset: 1.710 # auto-calibrated value
speed:35
samples:2
# Consider median if using more than 2 samples
#samples_result: median
samples_result: average
samples_tolerance: 0.0075
samples_tolerance_retries: 10
probe_with_touch_mode: true
stow_on_each_sample: false

[safe_z_home] 
home_xy_position: 117.5,117.5 #center of print bed (stated is 220x220 but actual is 235x235)
speed: 75
z_hop: 10                     # Move up 10mm
z_hop_speed: 5
move_to_previous: True

# Bed Meshing
[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 15,15
# Need to back probe opffset out of the max coordinates
#mesh_max: 205,205
mesh_max: 160,199
probe_count: 4,3
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0
#speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
#horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
#mesh_min:
#   Defines the minimum X, Y coordinate of the mesh for rectangular
#   beds. This coordinate is relative to the probe's location. This
#   will be the first point probed, nearest to the origin. This
#   parameter must be provided for rectangular beds.
#mesh_max:
#   Defines the maximum X, Y coordinate of the mesh for rectangular
#   beds. Adheres to the same principle as mesh_min, however this will
#   be the furthest point probed from the bed's origin. This parameter
#   must be provided for rectangular beds.
#probe_count: 3, 3
#   For rectangular beds, this is a comma separate pair of integer
#   values X, Y defining the number of points to probe along each
#   axis. A single value is also valid, in which case that value will
#   be applied to both axes. Default is 3, 3.
#fade_start: 1.0
#   The gcode z position in which to start phasing out z-adjustment
#   when fade is enabled. Default is 1.0.
#fade_end: 0.0
#   The gcode z position in which phasing out completes. When set to a
#   value below fade_start, fade is disabled. It should be noted that
#   fade may add unwanted scaling along the z-axis of a print. If a
#   user wishes to enable fade, a value of 10.0 is recommended.
#   Default is 0.0, which disables fade.
#fade_target:
#   The z position in which fade should converge. When this value is
#   set to a non-zero value it must be within the range of z-values in
#   the mesh. Users that wish to converge to the z homing position
#   should set this to 0. Default is the average z value of the mesh.
#split_delta_z: .025
#   The amount of Z difference (in mm) along a move that will trigger
#   a split. Default is .025.
#move_check_distance: 5.0
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
#mesh_pps: 2, 2
#   A comma separated pair of integers X, Y defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed point.
#   The user may enter a single value which will be applied to both
#   axes. Default is 2, 2.
#algorithm: lagrange
#   The interpolation algorithm to use. May be either "lagrange" or
#   "bicubic". This option will not affect 3x3 grids, which are forced
#   to use lagrange sampling. Default is lagrange.
#bicubic_tension: .2
#   When using the bicubic algorithm the tension parameter above may
#   be applied to change the amount of slope interpolated. Larger
#   numbers will increase the amount of slope, which results in more
#   curvature in the mesh. Default is .2.
#zero_reference_position:
#   An optional X,Y coordinate that specifies the location on the bed
#   where Z = 0.  When this option is specified the mesh will be offset
#   so that zero Z adjustment occurs at this location.  The default is
#   no zero reference.
#faulty_region_1_min:
#faulty_region_1_max:
#   Optional points that define a faulty region.  See docs/Bed_Mesh.md
#   for details on faulty regions.  Up to 99 faulty regions may be added.
#   By default no faulty regions are set.
#adaptive_margin:
#   An optional margin (in mm) to be added around the bed area used by
#   the defined print objects when generating an adaptive mesh.

[bed_screws]
screw1: 25, 205 # Using rear left to take measurements as harder to reach
screw1_name: rear left screw
screw2: 195, 205
screw2_name: rear right screw
screw3: 195, 35
screw3_name: front right screw
screw4: 25, 35
screw4_name: front left screw

# Support for commanding screw adjustment walk-through
[screws_tilt_adjust]
screw1: 57, 229
screw1_name: rear left screw
screw2: 227, 229
screw2_name: rear right screw
screw3: 227, 70
screw3_name: front right screw
screw4: 57, 70
screw4_name: front left screw
horizontal_move_z: 10
speed: 50
screw_thread: CW-M4 # Use CW for Clockwise and CCW for Counter Clockwise 

# Filament runout sensor (BTT SFS V2.0)
[filament_switch_sensor BTT_SFS_2.0_FilamentDet]
switch_pin: ^E0_STOP_SENSE #Note: needs pull-up
pause_on_runout: False
runout_gcode:
    RESPOND MSG="Filament sensor switch runout detected"
    # Beep to indicate fault
    M300 P100 S1100
    M300 P100 S1100
    M300 P100 S1100
    PAUSE # [pause_resume] is required
insert_gcode:
    RESPOND MSG="Filament sensor switch insertion detected"

[filament_motion_sensor BTT_SFS_2.0_MotionDet]
# SFS v2.0 min accuracy is 2.88 per user manual - should be able to get 
# pretty close to this without false positives w/ a bowden tube coupled
# interface
detection_length: 3.0
extruder: extruder
# Co-opting the power detect connector since the pinout fits w/o modification; 
# could also re-terminate in a 2-pin and coopt the Z end-stop connector instead
switch_pin: ^PWR_DET_SENSE #Note: needs pull-up
pause_on_runout: False
runout_gcode:
    RESPOND MSG="Filament sensor motion stop detected"
    # Beep to indicate fault
    M300 P100 S1100
    M300 P100 S1100
    M300 P100 S1100
    PAUSE # [pause_resume] is required
insert_gcode:
    RESPOND MSG="Filament sensor motion detected"
#event_delay: 3.0 #default=3.0
#pause_delay: 2.0 #default=0.5


# Display
######################################################################
# ENDER 3 V2 stock display
######################################################################
# This section was taken from a Creality "12864" display with a single
# ribbon cable between the display's EXP3 plug and the
# micro-controller board's EXP1 connector.

# [display]
# Note: the Ender 3 v2 4.3 screen isn't currently supported by klipper - ours has an async tx/rx serial interface
# lcd_type: st7920
# cs_pin: EXP1_7
# sclk_pin: EXP1_6
# sid_pin: EXP1_8
# encoder_pins: ^EXP1_LCD_ENC_A, ^EXP1_LCD_ENC_B
# click_pin: ^!EXP1_LCD_ENC_PRESS
# kill_pin: ^!EXP1_LCD_ENC_PRESS

# Beeper on LCD display board
# Note: output_pin w/ pwm: True didn't properly set the frequency
#[output_pin _beeper]
#pwm: True
[pwm_cycle_time _beeper]
pin: EXP1_LCD_BEEP
# Silent at power on, set to 1 if active low.
value: 0
# Disable at emergency shutdown (no PWM would be available anyway).
shutdown_value: 0
# Default PWM freq (1kHz)
cycle_time: 0.001
scale: 1


# Load custom macros
[include user-macros.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.045000, 0.025000, 0.055000, 0.095000
#*# 	  -0.100000, -0.110000, -0.060000, -0.027500
#*# 	  0.092500, 0.001250, -0.028750, -0.050000
#*# x_count = 4
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 159.99
#*# min_y = 15.0
#*# max_y = 199.0
