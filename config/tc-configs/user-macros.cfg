######################################################################
# External macros
######################################################################
[include line-purge-macros.cfg]

######################################################################
# Start Print and End Print
######################################################################

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT. See docs/Slicers.md for more information on using these macros.

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Reset Extruder
    G92 E0
    # Start bed heating
    RESPOND MSG="Setting Bed Temp to {BED_TEMP}"
    M140 S{BED_TEMP}
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    #SET_GCODE_OFFSET Z=0.0
    # Home the printer
    RESPOND MSG="Homing X,Y,Z Axes"
    G28
    
    # Calculate bed mesh
    BED_MESH_CLEAR
    RESPOND MSG="Running Adaptive Bed Meshing"
    BED_MESH_CALIBRATE
    ## Alternatively, Load saved bed mesh
    #BED_MESH_PROFILE LOAD="default"

    # Move the nozzle up a little to prevent scratching the Heat Bed
    G1 Z5 F3000
    # Move the nozzle to the wait position
    G1 X0.1 Y20 F5000
    # Move the nozzle very close to the bed
    G1 Z0.3 F300

    # Wait for bed to reach temperature
    RESPOND MSG="Waiting for bed to reach temperature..."
    M190 S{BED_TEMP}
    RESPOND MSG="done."
    # Set and wait for nozzle to reach temperature
    RESPOND MSG="Waiting for extruder to reach temperature..."
    M109 S{EXTRUDER_TEMP}
    RESPOND MSG="done."

    RESPOND MSG="Purging Line"
    ## Use fancy line purge macro
    ##LINE_PURGE
    # Alternatively, do this manually here a la Cura defualt approach
    {% set LINE_PURGE_X = [printer.toolhead.axis_minimum.x|float + 5, 5]|max|float %}  # Set X start to a safe location
    # Draw priming lines
    G1 X{LINE_PURGE_X}
    # Draw the first line
    G1 X{LINE_PURGE_X + 0.1} Y200.0 Z0.3 F1500.0 E15
    # Move to side a little
    G1 X{LINE_PURGE_X + 0.4} Y200.0 Z0.3 F5000.0
    # Draw the second line
    G1 X{LINE_PURGE_X + 0.4} Y20 Z0.3 F1500.0 E30
    # Reset Extruder
    G92 E0
    # Move the nozzle up a little to prevent scratching the Heat Bed
    G1 Z2.0 F3000
    # Move over to prevent blob squish 
    G1 X{LINE_PURGE_X + 5} Y20 Z0.3 F5000.0

    # Enable the filament runout sensor
    RESPOND MSG="Filament Runout Sensor ON"
    SET_FILAMENT_SENSOR SENSOR=BTT_SFS_2.0_MotionDet ENABLE=1

    RESPOND MSG="Starting print!"

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    
    # Use relative positioning
    G91
    # Move nozzle away from print while retracting
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    # Use absolute coordinates
    G90
    # Present print
    {% set X_PARK = [printer.toolhead.axis_minimum.x, 15]|max|float %}  # Avoid crashing the end stop if min is too low in the config for some reason
    {% set Y_PARK = printer.toolhead.axis_maximum.y|float - 5.0 %}
    G1 X{X_PARK} Y{Y_PARK}

    # Disable steppers
    #M84
    M84 X Y E #Disable all but Z axis steppers 

    # Play a happy song
    M300 P100 S2000
    M300 P100 S4000
    M300 P200 S8000
    M300 P100 S4000
    M300 P500 S8000

    # Disable the filament runout sensor
    RESPOND MSG="Filament Runout Sensor OFF"
    SET_FILAMENT_SENSOR SENSOR=BTT_SFS_2.0_MotionDet ENABLE=0

# Do we need a cancel here?
[gcode_macro CANCEL_PRINT]
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    RESPOND MSG="Filament Runout Sensor OFF"
    SET_FILAMENT_SENSOR SENSOR=BTT_SFS_2.0_MotionDet ENABLE=0


# Beep macro
######################################################################
# Beeper
######################################################################
# Usage:
#   M300 [P<ms>] [S<Hz>]
#   P is the tone duration, S the tone frequency.
# The frequency won't be pitch perfect.
# [gcode_macro M300]
# gcode:
#     # Use a default 1kHz tone if S is omitted.
#     {% set S = params.S|default(1000)|int %}
#     # Use a 10ms duration is P is omitted.
#     {% set P = params.P|default(100)|int %}
#     SET_PIN PIN=beeper VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
#     G4 P{P}
#     SET_PIN PIN=beeper VALUE=0

# modified version from u/L00terDude
[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    {% set L = 0.5 %} ; L varies the PWM on time, close to 0 or 1 the tone gets a bit quieter. 0.5 is a symmetric waveform
    {% if S <= 0 %} ; dont divide through zero
    {% set F = 1 %}
    {% set L = 0 %}
    {% elif S >= 10000 %} ;max frequency set to 10kHz
    {% set F = 0 %}
    {% else %}
    {% set F = 1/S %} ;convert frequency to seconds 
    {% endif %}
    SET_PIN PIN=_beeper VALUE={L} CYCLE_TIME={F} ;Play tone
    G4 P{P} ;tone duration
    SET_PIN PIN=_beeper VALUE=0


######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state
